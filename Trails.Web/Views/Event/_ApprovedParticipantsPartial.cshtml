@inject UserManager<User> userManager;
@model EventDetailsModel

@{
    int CalculateAge(DateTime birthDate) 
        => birthDate.CalculateAge(DateTime.Today).Years;

    var totalParticipants = Model
        .Participants
        .Count(p => p.IsApproved);
}

<div class="modal fade" id="approvedParticipantsModal" tabindex="-1" aria-labelledby="approvedParticipantsModal" aria-hidden="true">
     <div class="modal-dialog modal-xl">
         <div class="modal-content">
             <div class="modal-header border-0"><button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button></div>
             <div class="modal-body text-center pb-5">
                 <div class="container">
                     <div class="row justify-content-center">
                         <div class="col-lg-8">
                             <h2 class="text-secondary text-uppercase mb-3">List of participants for event</h2>
                             @if (totalParticipants != 0)
                             {
                                 var menParticipants = Model
                                     .Participants
                                     .Count(p => p.IsApproved && p.User.Gender == Gender.Male);

                                 var womenParticipants = Model
                                     .Participants
                                     .Count(p => p.IsApproved && p.User.Gender == Gender.Female);

                                 var youngestParticipantBirthdate = Model
                                     .Participants
                                     .Max(p => p.User.BirthDate);

                                 var oldestParticipantBirthdate = Model
                                     .Participants
                                     .Min(p => p.User.BirthDate);

                                 <div class="row">
                                     <p><strong>Total participants: </strong>@totalParticipants of which @menParticipants men and @womenParticipants women.</p>
                                     <p><strong>Youngest</strong> participant is @CalculateAge(youngestParticipantBirthdate) old and <strong>oldest</strong> is @CalculateAge(oldestParticipantBirthdate).</p>
                                 </div>
                             }
                             <table class="table table-hover text-secondary mt-3 mb-5">
                                 <thead>
                                 <tr class="text-center">
                                     <th>Name</th>
                                     <th>Country</th>
                                     <th>Gender</th>
                                     <th>Age</th>
                                     @if (DateTime.UtcNow > Model.EndDate)
                                     {
                                         <th>Activity</th>
                                     }
                                 </tr>
                                 </thead>
                                 <tbody>
                                 @if (!Model.Participants.Any(p => p.IsApproved))
                                 {
                                     <tr class="text-center text-secondary">
                                         <td>No participants applied for this event.</td>
                                     </tr>
                                 }
                                 else
                                 {
                                     @foreach (var participant in Model.Participants.Where(p => p.IsApproved))
                                     {
                                         var participantUser = await this.userManager.Users.FirstOrDefaultAsync(u => u.Id == participant.UserId);
                                         <tr class="text-center">
                                             <td style="word-wrap: normal">@($"{participantUser.FirstName} {participantUser.LastName}")</td>
                                             <td style="word-wrap: normal">@participantUser.CountryName</td>
                                             <td style="word-wrap: normal">@participantUser.Gender</td>
                                             <td style="word-wrap: normal">@CalculateAge(participantUser.BirthDate)</td>
                                             @if (DateTime.UtcNow > Model.EndDate)
                                             {
                                                 <td>
                                                     <a asp-controller="Event"
                                                        asp-action="DownloadActivity"
                                                        asp-route-participantId="@participant.Id"
                                                        class="btn btn-info">Download</a>
                                                 </td>
                                             }
                                         </tr>
                                     }
                                 }
                                 </tbody>
                             </table>
                         </div>
                     </div>
                 </div>
             </div>
         </div>
     </div>
</div>