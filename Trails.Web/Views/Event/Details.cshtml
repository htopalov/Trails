@using Microsoft.AspNetCore.Identity;
@using Microsoft.EntityFrameworkCore
@inject UserManager<User> userManager;

@model EventDetailsModel

@{
    var userId = this.userManager.GetUserId(this.User);
    var creator = await this.userManager.Users.FirstOrDefaultAsync(u => u.Id == Model.CreatorId);
    var creatorFullname = $"{creator.FirstName} {creator.LastName}";
    var participantModel = Model.Participants.FirstOrDefault(p => p.UserId == userId);
    var terminationDate = Model.StartDate.AddDays(-3);
    var terminationOfApply = DateTime.UtcNow > terminationDate;
    ViewData["Title"] = "Event Details ";
}

<section class="page-section bg-primary">
    <div class="container mx-auto mt-4">
        <div class="container main-event shadow-lg p-2 mb-1 rounded bg-primary">
            <div class="row">
                <div class="col-md-4">
                    <div class="event-img">
                        <img src="@Model.Image" alt=""/>
                        @if (Model.CreatorId == userId)
                        {
                            <form enctype="multipart/form-data" method="post" asp-controller="Event" asp-action="EditImage" asp-route-eventId="@Model.Id">
                                <div class="file btn btn-lg btn-primary">
                                    Change Image
                                    <input type="file" name="file" id="imageInput"/>
                                </div>
                            </form>
                        }
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="event-head">
                        <h4 class="text-secondary text-uppercase">
                            @Model.Name
                        </h4>
                        <h5 class="text-secondary">
                            created by <strong class="text-secondary text-uppercase">@creatorFullname</strong>
                        </h5>
                        <p>
                            <strong class="text-secondary">Start: </strong> <span>@Model.StartDate.ToString("f") </span><strong class="event-date-end">End: </strong><span>@Model.EndDate.ToString("f")</span> <strong class="event-date-end">Apply till: </strong><span>@(terminationOfApply ? "EXPIRED" : terminationDate.ToString("f"))</span>
                        </p>
                        <div class="col-md-2">
                            <div class="btn-group" role="group">
                                @if (participantModel == null && !User.IsInRole("Administrator"))
                                {
                                    <a asp-controller="Event" asp-action="Apply" asp-route-userId="@userId" asp-route-eventId="@Model.Id" class="btn btn-info @(terminationOfApply ? "disabled" : string.Empty)">Apply</a>
                                }
                                @if (userId == Model.CreatorId || User.IsInRole("Administrator"))
                                {
                                    <a asp-controller="Event" asp-action="Edit" asp-route-id="" class="btn btn-warning">Edit</a>
                                    <a asp-controller="Event" asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">Delete</a>
                                    <a data-bs-toggle="modal" data-bs-target="#participantsModal"class="btn btn-success">Participants</a>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <div class="event-work">
                        <h5 class="text-secondary">About event:</h5>
                        <p class="text-secondary">@Model.Description</p>
                    </div>
                </div>
                <div class="col-md-8">
                    <div id="eventInfo">
                        <div class="row">
                            <div class="col-md-6">
                                <label class="text-secondary">Event type: </label>
                            </div>
                            <div class="col-md-6">
                                <p class="text-secondary">@Model.Type</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label class="text-secondary">Difficulty Level: </label>
                            </div>
                            <div class="col-md-6">
                                <p class="text-secondary">@Model.DifficultyLevel</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label class="text-secondary">Total Length: </label>
                            </div>
                            <div class="col-md-6">
                                <p class="text-secondary">@($"{@Model.Length:f2} km")</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label class="text-secondary">Route: </label>
                            </div>
                            <div class="col-md-6">
                                <p><a class="text-secondary" asp-controller="Route" asp-action="Details" asp-route-id="@Model.Route.Id" style="text-decoration: none; cursor: pointer">Details</a></p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label class="text-secondary">Start Location: </label>
                            </div>
                            <div class="col-md-6">
                                <p class="text-secondary">@Model.Route.StartLocationName</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label class="text-secondary">Finish Location: </label>
                            </div>
                            <div class="col-md-6">
                                <p class="text-secondary">@Model.Route.FinishLocationName</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@if (userId == Model.CreatorId || User.IsInRole("Administrator"))
{<div class="modal fade" id="participantsModal" tabindex="-1" aria-labelledby="participantsModal" aria-hidden="true">
     <div class="modal-dialog modal-xl">
         <div class="modal-content">
             <div class="modal-header border-0"><button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button></div>
             <div class="modal-body text-center pb-5">
                 <div class="container">
                     <div class="row justify-content-center">
                         <div class="col-lg-8">
                             <h2 class="text-secondary text-uppercase mb-3">List of participants for event</h2>
                             <h2 class="text-secondary text-uppercase mb-3">Awaiting approval:</h2>
                             <table class="table table-hover text-secondary mt-3 mb-5">
                                 <thead>
                                 <tr class="text-center">
                                     <th>Participant Name</th>
                                     <th>Participant Country</th>
                                     <th>Participant Gender</th>
                                     <th>Action</th>
                                 </tr>
                                 </thead>
                                 <tbody>
                                 @if (Model.Participants.All(p=>p.IsApproved == true))
                                 {
                                     <tr class="text-center text-secondary">
                                         <td>No participants waiting for approval.</td>
                                     </tr>
                                 }
                                 else
                                 {
                                     @foreach(var participant in Model.Participants.Where(p=>p.IsApproved == false))
                                     {
                                         var participantUser = await this.userManager.Users.FirstOrDefaultAsync(u => u.Id == participant.UserId);
                                         <tr class="text-center">
                                             <td>@($"{participantUser.FirstName} {participantUser.LastName}")</td>
                                             <td>@participantUser.CountryName</td>
                                             <td>@participantUser.Gender</td>
                                             <td>
                                                 <a asp-controller="Event" asp-action="ApproveParticipant" asp-route-participantId="@participant.Id" asp-route-eventId="@Model.Id" class="btn btn-success approve">Approve</a>
                                             </td>
                                         </tr>
                                     }
                                 }
                                 </tbody>
                             </table>
                         </div>
                     </div>
                 </div>
             </div>
         </div>
     </div>
</div>
}

@section Scripts
{
    <script>
        document.querySelector('.btn-close').addEventListener('click',
            function() {
                window.location.reload();
            });

        let approveButtons = document.querySelectorAll('.approve');
        for (var i = 0; i < approveButtons.length; i++) {
            approveButtons[i].addEventListener('click',
                function(e) {
                    let participantRow = e.target.closest('tr');
                    console.log(participantRow);
                    participantRow.remove();
                });
        }

        document.getElementById('imageInput').addEventListener('change', function(e) {
            e.target.closest('form').submit();
        });
    </script>
}
